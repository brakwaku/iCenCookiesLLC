type User {
  _id: ID!
  name: String!
  email: String!
  role: String!
  password: String!
  address: Address
  orders: [Order]
  preferences: Preferences
  createdAt: String!
}

type Address {
  address: String!
  city: String!
  postalCode: String!
  country: String!
}

type Preferences {
  _id: ID!
  user: ID!
  monthlyDelivery: Boolean
  doNotAdd: [String]
  order: Order
}

type Product {
  _id: ID!
  user: ID!
  name: String!
  imageUrl: String!
  cloudinaryId: String # Make required later
  type: String!
  category: String # Make required later
  description: String!
  reviews: [Review]
  rating: Float
  numReviews: Int
  price: Float!
  countInStock: Int!
  createdAt: String!
  updatedAt: String!
}

type Review {
  _id: ID!
  title: String!
  comment: String!
  rating: Float!
  user: User!
  product: ID!
  isSanctioned: Boolean!
  createdAt: String!
  updatedAt: String!
}

type Order {
  _id: ID!
  user: ID!
  type: String!
  orderItems: [OrderItem]
  shippingAddress: Address!
  paymentMethod: String!
  paymentResult: PaymentResult
  taxPrice: Float!
  shippingPrice: Float!
  totalPrice: Float!
  isPaid: Boolean!
  paidAt: String
  isDelivered: Boolean!
  deliveredAt: String
}

type OrderItem {
  name: String!
  qty: Int!
  image: String!
  price: Float!
  productId: ID!
}

type PaymentResult {
  id: String!
  status: String!
  update_time: String!
  email_address: String!
  phone_number: String!
}

type PaymentIntent {
  success: Boolean
  message: String
  clientSecret: String
}

type Query {
  # User queries
  getAllUsers: [User]
  getUserById(id: ID!): User

  # Product queries
  getAllProducts: [Product]
  getProductById(id: ID!): Product
  getProductReviews(productId: ID!): [Review]

  # Order queries
  getAllUserOrders: [Order]
  getOrderById(id: ID!): Order

  # Review queries
  reviews: [Review]
  review(id: ID!): Review
}

type Mutation {
  # Product mutations
  createProduct(input: ProductInput!): Product
  updateProduct(id: ID!, input: UpdateProductInput!): Product
  deleteProduct(deleteProductId: ID!): MessageResponse

  # Order mutations
  createOrder(input: OrderInput!): Order
  updateOrder(id: ID!, input: UpdateOrderInput!): Order
  deleteOrder(deleteOrderId: ID!): MessageResponse

  # User mutations
  registerUser(userInput: UserInput!): AuthUserResponse!
  loginUser(email: String!, password: String!): AuthUserResponse!
  logoutUser: LogoutUserResponse!
  forgotPasswordRequest(email: String!): MessageResponse!
  forgotPassword(newPassword: String!, resetToken: String!): MessageResponse!
  resetPassword(currentPassword: String!, newPassword: String!): MessageResponse!
  updateUser(userId: ID!, updatedUser: UpdatedUserInput!): User!
  deleteUser(deleteUserId: ID!): MessageResponse

  # Review mutations
  createReview(input: ReviewInput!): Review
  updateReview(id: ID!, input: UpdateReviewInput!): Review
  deleteReview(deleteReviewId: ID!): MessageResponse

  # Preferences mutations
  createPreferences(input: PreferencesInput!): Preferences
  updatePreferences(id: ID!, input: PreferencesInput!): Preferences
  deletePreferences(deletePreferencesId: ID!): MessageResponse

  # Checkout mutations
  createPaymentIntent(input: PaymentIntentInput!): PaymentIntent
}

type AuthUserResponse {
  token: String!
  user: User!
  success: Boolean!
}

type LogoutUserResponse {
  success: Boolean!
  message: String!
}

type MessageResponse {
  message: String!
}

type CheckoutResult {
  success: Boolean
  message: String
  paymentIntentId: String
}

input AddressInput {
  address: String!
  city: String!
  postalCode: String
  country: String
}

input ProductInput {
  name: String!
  description: String!
  imageUrl: String!
  type: String! # The type of cookie (Customizable product, regular product, etc.)
  rating: Float!
  numReviews: Int!
  countInStock: Int!
  price: Float!
}

input UpdateProductInput {
  name: String
  description: String
  imageUrl: String
  cloudinaryId: String
  type: String
  category: String
  rating: Float
  numReviews: Int
  countInStock: Int
  price: Float
}

input OrderInput {
  user: ID!
  type: String!
  orderItems: [OrderItemInput]!
  shippingAddress: AddressInput!
  paymentMethod: String!
  taxPrice: Float!
  shippingPrice: Float!
  totalPrice: Float!
  isPaid: Boolean!
  paidAt: String
  isDelivered: Boolean!
  deliveredAt: String
}

input UpdateOrderInput {
  type: String
  orderItems: [OrderItemInput]
  shippingAddress: AddressInput
  paymentMethod: String
  taxPrice: Float
  shippingPrice: Float
  totalPrice: Float
  isPaid: Boolean
  paidAt: String
  isDelivered: Boolean
  deliveredAt: String
}

input OrderItemInput {
  name: String!
  qty: Int!
  image: String!
  price: Float!
  product: ID!
}

input UserInput {
  name: String!
  email: String!
  role: String!
  password: String!
  address: AddressInput
  orders: [ID]
  preferences: ID
  createdAt: String
}

input UpdatedUserInput {
  name: String
  email: String
  role: String
  password: String
  address: AddressInput
  orders: [ID]
  preferences: ID
  createdAt: String
}

input PreferencesInput {
  user: ID!
  monthlyDelivery: Boolean
  doNotAdd: [String]
  order: ID
}


# input UpdatePreferencesInput {
#   monthlyDelivery: Boolean
#   doNotAdd: [String]
#   order: ID
# }

input ReviewInput {
  title: String!
  comment: String!
  rating: Float!
  product: ID!
}

input UpdateReviewInput {
  title: String
  comment: String
  rating: Float
  user: ID
}

input PaymentIntentInput {
  amount: Int!
  currency: String!
  orderId: ID!
  email: String!
}

# input CheckoutInput {
#   amount: Int!
#   currency: String!
# }

